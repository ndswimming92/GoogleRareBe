// <auto-generated />
using System;
using GoogleRareBe;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GoogleRareBe.Migrations
{
    [DbContext(typeof(GoogleRareBeDbContext))]
    [Migration("20240320020402_thirdCreate")]
    partial class thirdCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GoogleRareBe.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Sports"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Food"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Travel"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Animals"
                        },
                        new
                        {
                            Id = 5,
                            Label = "News"
                        });
                });

            modelBuilder.Entity("GoogleRareBe.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Author_id")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Post_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author_id = 1,
                            Content = "Howdley Doodley",
                            Created_on = new DateTime(2024, 3, 19, 21, 4, 2, 60, DateTimeKind.Local).AddTicks(9855),
                            Post_id = 1
                        },
                        new
                        {
                            Id = 2,
                            Author_id = 2,
                            Content = "This is a comment that will be changed soon",
                            Created_on = new DateTime(2024, 3, 19, 21, 4, 2, 63, DateTimeKind.Local).AddTicks(4554),
                            Post_id = 2
                        },
                        new
                        {
                            Id = 3,
                            Author_id = 3,
                            Content = "Death metal is really good :)",
                            Created_on = new DateTime(2024, 3, 19, 21, 4, 2, 63, DateTimeKind.Local).AddTicks(4576),
                            Post_id = 3
                        });
                });

            modelBuilder.Entity("GoogleRareBe.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RareUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Approved = true,
                            CategoryId = 1,
                            Content = "that was amazing! I cant belive he hit that kick.",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQQaqJLGCMY6GnWpqz1a9uh0FO8yuFsJ5XTJg&usqp=CAU",
                            PublicationDate = new DateTime(2024, 3, 19, 21, 4, 2, 63, DateTimeKind.Local).AddTicks(7832),
                            RareUserId = 1,
                            Title = "oh wow, what a field goal!"
                        },
                        new
                        {
                            Id = 2,
                            Approved = false,
                            CategoryId = 2,
                            Content = "I went to a restaurant recently and I got this, it was amazing!",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcStxYUb82L3RX5dgbZ_sPnFJGziaA3O3nqMQw&usqp=CAU",
                            PublicationDate = new DateTime(2024, 3, 19, 21, 4, 2, 63, DateTimeKind.Local).AddTicks(8353),
                            RareUserId = 2,
                            Title = "this food was absolutly amazing!"
                        },
                        new
                        {
                            Id = 3,
                            Approved = true,
                            CategoryId = 3,
                            Content = "Went to New Zealand recently, so amazing!",
                            ImageUrl = "https://uploads.alaska.org/suppliers/activities/K/K2/_690x460_crop_center-center_65_none/full-8431-alaska-rusts-k2-talkeetna.jpg",
                            PublicationDate = new DateTime(2024, 3, 19, 21, 4, 2, 63, DateTimeKind.Local).AddTicks(8360),
                            RareUserId = 3,
                            Title = "Beautiful mountains"
                        },
                        new
                        {
                            Id = 4,
                            Approved = true,
                            CategoryId = 4,
                            Content = "we went down to the shelter and got myself a new cat, welcome Slinky!",
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.nationalgeographic.com%2Fanimals%2Fmammals%2Ffacts%2Fdomestic-cat&psig=AOvVaw1VGG2bBHXaIDXPM2sRgYSO&ust=1710688495265000&source=images&cd=vfe&opi=89978449&ved=0CBMQjRxqFwoTCLDFz5aK-YQDFQAAAAAdAAAAABAD",
                            PublicationDate = new DateTime(2024, 3, 19, 21, 4, 2, 63, DateTimeKind.Local).AddTicks(8365),
                            RareUserId = 4,
                            Title = "I got a new Cat!"
                        },
                        new
                        {
                            Id = 5,
                            Approved = true,
                            CategoryId = 5,
                            Content = "family comes together to help those in need, what a time for the youth to help out!",
                            ImageUrl = "https://i0.wp.com/bcc-newspack.s3.amazonaws.com/uploads/2021/06/060221-Good-News-Shelter-Rogers-Park-ColinBoyle-5-e1623936580193.jpg?fit=1500%2C998&ssl=1",
                            PublicationDate = new DateTime(2024, 3, 19, 21, 4, 2, 63, DateTimeKind.Local).AddTicks(8367),
                            RareUserId = 5,
                            Title = "Local kids helped at the homeless shelter, neighborhood moral skyrockets!"
                        });
                });

            modelBuilder.Entity("GoogleRareBe.Models.PostReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("postId")
                        .HasColumnType("integer");

                    b.Property<int>("rareUserId")
                        .HasColumnType("integer");

                    b.Property<int>("reactionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PostReactions");
                });

            modelBuilder.Entity("GoogleRareBe.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("image_Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            image_Url = "https://ih1.redbubble.net/image.5328806804.9180/raf,360x360,075,t,fafafa:ca443f4786.jpg",
                            label = "label1"
                        },
                        new
                        {
                            Id = 2,
                            image_Url = "https://thumbs.dreamstime.com/b/yellow-emoji-icon-crying-emoji-sad-face-emoticon-chat-comment-reaction-emotes-social-media-concept-emotion-vector-eps-212589528.jpg",
                            label = "label2"
                        },
                        new
                        {
                            Id = 3,
                            image_Url = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.redbubble.com%2Fi%2Fgreeting-card%2Fangry-react-emoji-by-LORRAUN%2F39738117.5MT14&psig=AOvVaw1pJxNNCgUdaRQ_H1PaAKEK&ust=1710690790233000&source=images&cd=vfe&opi=89978449&ved=0CBMQjRxqFwoTCMCS64OS-YQDFQAAAAAdAAAAABAD",
                            label = "label3"
                        });
                });

            modelBuilder.Entity("GoogleRareBe.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Author_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Ended_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Follower_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author_id = 1,
                            Created_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6355),
                            Ended_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6570),
                            Follower_id = 1
                        },
                        new
                        {
                            Id = 2,
                            Author_id = 2,
                            Created_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6765),
                            Ended_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6769),
                            Follower_id = 2
                        },
                        new
                        {
                            Id = 3,
                            Author_id = 3,
                            Created_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6772),
                            Ended_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6774),
                            Follower_id = 3
                        },
                        new
                        {
                            Id = 4,
                            Author_id = 4,
                            Created_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6777),
                            Ended_on = new DateTime(2024, 3, 19, 21, 4, 2, 64, DateTimeKind.Local).AddTicks(6778),
                            Follower_id = 4
                        });
                });

            modelBuilder.Entity("GoogleRareBe.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "NewItem1"
                        },
                        new
                        {
                            Id = 2,
                            Label = "NewItem2"
                        });
                });

            modelBuilder.Entity("GoogleRareBe.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Bio = "A Mystery Man",
                            CreatedOn = new DateTime(2022, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            IsStaff = true,
                            LastName = "Doe",
                            PublicImageUrl = "https://images.saymedia-content.com/.image/t_share/MTgyODcwNDI1NTAyNDkyMDY3/the-mystery-man.jpg",
                            Uid = "JD1234MM",
                            email = "mman@googlerare.com"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Bio = "A Mystery Woman",
                            CreatedOn = new DateTime(2023, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            IsStaff = false,
                            LastName = "Doe",
                            PublicImageUrl = "https://th.bing.com/th/id/R.e2149e74aa05e6864c45bd9ec1ab773f?rik=fQx6Mc1U%2b6Hl1A&riu=http%3a%2f%2fwww.brookpacelascelles.com%2fproduct-images%2fFullsize%2f9d8ddd3d-3f11-420b-aba6-695eb86f7f9b-1.jpg&ehk=oYOiBFvK5j0fz3qyT1tbBHOvEdDkdEVu4HClA72AO4M%3d&risl=&pid=ImgRaw&r=0",
                            Uid = "MJD1234E",
                            email = "MsJDoe@googlerare.com"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Bio = "Actor and Lover of Elanor",
                            CreatedOn = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nick",
                            IsStaff = false,
                            LastName = "Cage",
                            PublicImageUrl = "https://epmgaa.media.clients.ellingtoncms.com/img/photos/2019/04/01/S107298446.JPG",
                            Uid = "FGT1967GO",
                            email = "goneis60sec@googlerate.com"
                        });
                });

            modelBuilder.Entity("GoogleRareBe.Models.UserTypeChangeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AdminOneId")
                        .HasColumnType("integer");

                    b.Property<int>("AdminTwoId")
                        .HasColumnType("integer");

                    b.Property<int>("ModifiedUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UserTypeChangeRequests");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<int>("PostsId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("PostsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("GoogleRareBe.Models.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoogleRareBe.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
